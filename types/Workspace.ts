// Copyright (c) 2022. Heusala Group Oy <info@heusalagroup.fi>. All rights reserved.

import { isString, isStringOrUndefined } from "../../../../io/hyperify/core/types/String";
import { isRegularObject } from "../../../../io/hyperify/core/types/RegularObject";
import { hasNoOtherKeysInDevelopment } from "../../../../io/hyperify/core/types/OtherKeys";

export interface Workspace {

    /**
     * The unique ID of the workspace.
     *
     * This is the ID generated by the database repository implementation.
     *
     * Use `"new"` when creating a new object.
     */
    readonly id   : string;

    /**
     * The name of the workspace
     */
    readonly name : string;

}

export function createWorkspace (
    id: string,
    name: string
): Workspace {
    return {
        id,
        name
    };
}

export function isWorkspace (value: any): value is Workspace {
    return (
        isRegularObject(value)
        && hasNoOtherKeysInDevelopment(value, [
            'id',
            'name'
        ])
        && isString(value?.id)
        && isString(value?.name)
    );
}

export function isPartialWorkspace (value: any): value is Workspace {
    return (
        isRegularObject(value)
        && hasNoOtherKeysInDevelopment(value, [
            'id',
            'name'
        ])
        && isStringOrUndefined(value?.id)
        && isStringOrUndefined(value?.name)
    );
}

export function stringifyWorkspace (value: Workspace): string {
    return `Workspace(${value})`;
}

export function parseWorkspace (value: any): Workspace | undefined {
    if ( isWorkspace(value) ) return value;
    return undefined;
}
